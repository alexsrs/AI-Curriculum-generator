import Stripe from 'stripe';export const stripe = new Stripe(process.env.STRIPE_SECRET_KEY!, {  apiVersion: '2023-10-16',});export const PLANS = {  FREE: {    name: 'Gratuito',    downloadsPerMonth: 3,  },  MONTHLY: {    name: 'Premium Mensal',    downloadsPerMonth: 50,  },  YEARLY: {    name: 'Premium Anual',    downloadsPerMonth: 100,  },} as const;export type PlanType = keyof typeof PLANS;export async function createCheckoutSession({  priceId,  userId,  userEmail,  successUrl,  cancelUrl,}: {  priceId: string;  userId: string;  userEmail: string;  successUrl: string;  cancelUrl: string;}) {  try {    const session = await stripe.checkout.sessions.create({      mode: 'subscription',      payment_method_types: ['card'],      line_items: [        {          price: priceId,          quantity: 1,        },      ],      success_url: successUrl,      cancel_url: cancelUrl,      customer_email: userEmail,      metadata: {        userId,      },      subscription_data: {        metadata: {          userId,        },      },    });    return session;  } catch (error) {    console.error('Error creating checkout session:', error);    throw error;  }}export async function createPortalSession({  customerId,  returnUrl,}: {  customerId: string;  returnUrl: string;}) {  try {    const session = await stripe.billingPortal.sessions.create({      customer: customerId,      return_url: returnUrl,    });    return session;  } catch (error) {    console.error('Error creating portal session:', error);    throw error;  }}
